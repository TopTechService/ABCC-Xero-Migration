//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class XeroCreateBankTransactionRes_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"Id\": \"34a711aa-892b-434d-9e9c-1200058cf7da\",'+
		'  \"Status\": \"OK\",'+
		'  \"ProviderName\": \"Test App\",'+
		'  \"DateTimeUTC\": \"\\/Date(1524823530184)\\/\",'+
		'  \"BankTransactions\": ['+
		'    {'+
		'      \"BankTransactionID\": \"adda745c-d4ef-4682-af13-45cf22f5294a\",'+
		'      \"BankAccount\": {'+
		'        \"AccountID\": \"26b5746d-74e9-4102-82bc-619442978769\",'+
		'        \"Code\": \"100\",'+
		'        \"Name\": \"test\"'+
		'      },'+
		'      \"Type\": \"RECEIVE-PREPAYMENT\",'+
		'      \"IsReconciled\": false,'+
		'      \"CurrencyRate\": 1.000000,'+
		'      \"PrepaymentID\": \"936eebb2-9a7e-4b26-8424-4ec6e4966563\",'+
		'      \"Contact\": {'+
		'        \"ContactID\": \"0912d9aa-9893-4446-8b27-7e61bd2d5c3b\",'+
		'        \"ContactNumber\": \"001N000001GDdcbIAD\",'+
		'        \"ContactStatus\": \"ACTIVE\",'+
		'        \"Name\": \"Resonant Cloud\",'+
		'        \"EmailAddress\": \"\",'+
		'        \"BankAccountDetails\": \"\",'+
		'        \"Addresses\": ['+
		'          {'+
		'            \"AddressType\": \"STREET\",'+
		'            \"City\": \"\",'+
		'            \"Region\": \"\",'+
		'            \"PostalCode\": \"\",'+
		'            \"Country\": \"\"'+
		'          },'+
		'          {'+
		'            \"AddressType\": \"POBOX\",'+
		'            \"City\": \"\",'+
		'            \"Region\": \"\",'+
		'            \"PostalCode\": \"\",'+
		'            \"Country\": \"\"'+
		'          }'+
		'        ],'+
		'        \"Phones\": ['+
		'          {'+
		'            \"PhoneType\": \"DEFAULT\",'+
		'            \"PhoneNumber\": \"\",'+
		'            \"PhoneAreaCode\": \"\",'+
		'            \"PhoneCountryCode\": \"\"'+
		'          },'+
		'          {'+
		'            \"PhoneType\": \"DDI\",'+
		'            \"PhoneNumber\": \"\",'+
		'            \"PhoneAreaCode\": \"\",'+
		'            \"PhoneCountryCode\": \"\"'+
		'          },'+
		'          {'+
		'            \"PhoneType\": \"FAX\",'+
		'            \"PhoneNumber\": \"\",'+
		'            \"PhoneAreaCode\": \"\",'+
		'            \"PhoneCountryCode\": \"\"'+
		'          },'+
		'          {'+
		'            \"PhoneType\": \"MOBILE\",'+
		'            \"PhoneNumber\": \"\",'+
		'            \"PhoneAreaCode\": \"\",'+
		'            \"PhoneCountryCode\": \"\"'+
		'          }'+
		'        ],'+
		'        \"UpdatedDateUTC\": \"\\/Date(1524734485780+0000)\\/\",'+
		'        \"ContactGroups\": [],'+
		'        \"ContactPersons\": [],'+
		'        \"HasValidationErrors\": false'+
		'      },'+
		'      \"DateString\": \"2018-04-27T00:00:00\",'+
		'      \"Date\": \"\\/Date(1524787200000+0000)\\/\",'+
		'      \"Status\": \"AUTHORISED\",'+
		'      \"LineAmountTypes\": \"Inclusive\",'+
		'      \"LineItems\": ['+
		'        {'+
		'          \"Description\": \"Hello World Tuesday 17 October 2017(1 x Member Ticket)\",'+
		'          \"UnitAmount\": 120.00,'+
		'          \"TaxType\": \"OUTPUT\",'+
		'          \"TaxAmount\": 10.91,'+
		'          \"LineAmount\": 120.00,'+
		'          \"AccountCode\": \"200\",'+
		'          \"Tracking\": [],'+
		'          \"Quantity\": 1.0000,'+
		'          \"LineItemID\": \"d08cfd98-66b3-4348-8eab-4429653b4e96\",'+
		'          \"ValidationErrors\": []'+
		'        }'+
		'      ],'+
		'      \"SubTotal\": 109.09,'+
		'      \"TotalTax\": 10.91,'+
		'      \"Total\": 120.00,'+
		'      \"UpdatedDateUTC\": \"\\/Date(1524823530077+0000)\\/\",'+
		'      \"CurrencyCode\": \"AUD\"'+
		'    }'+
		'  ]'+
		'}';
		XeroCreateBankTransactionRes r = XeroCreateBankTransactionRes.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.Addresses objAddresses = new XeroCreateBankTransactionRes.Addresses(System.JSON.createParser(json));
		System.assert(objAddresses != null);
		System.assert(objAddresses.AddressType == null);
		System.assert(objAddresses.City == null);
		System.assert(objAddresses.Region == null);
		System.assert(objAddresses.PostalCode == null);
		System.assert(objAddresses.Country == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.ContactGroups objContactGroups = new XeroCreateBankTransactionRes.ContactGroups(System.JSON.createParser(json));
		System.assert(objContactGroups != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.LineItems objLineItems = new XeroCreateBankTransactionRes.LineItems(System.JSON.createParser(json));
		System.assert(objLineItems != null);
		System.assert(objLineItems.Description == null);
		System.assert(objLineItems.UnitAmount == null);
		System.assert(objLineItems.TaxType == null);
		System.assert(objLineItems.TaxAmount == null);
		System.assert(objLineItems.LineAmount == null);
		System.assert(objLineItems.AccountCode == null);
		System.assert(objLineItems.Tracking == null);
		System.assert(objLineItems.Quantity == null);
		System.assert(objLineItems.LineItemID == null);
		System.assert(objLineItems.ValidationErrors == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.BankTransactions objBankTransactions = new XeroCreateBankTransactionRes.BankTransactions(System.JSON.createParser(json));
		System.assert(objBankTransactions != null);
		System.assert(objBankTransactions.BankTransactionID == null);
		System.assert(objBankTransactions.BankAccount == null);
		System.assert(objBankTransactions.Type_Z == null);
		System.assert(objBankTransactions.IsReconciled == null);
		System.assert(objBankTransactions.CurrencyRate == null);
		System.assert(objBankTransactions.PrepaymentID == null);
		System.assert(objBankTransactions.Contact == null);
		System.assert(objBankTransactions.DateString == null);
		System.assert(objBankTransactions.Date_Z == null);
		System.assert(objBankTransactions.Status == null);
		System.assert(objBankTransactions.LineAmountTypes == null);
		System.assert(objBankTransactions.LineItems == null);
		System.assert(objBankTransactions.SubTotal == null);
		System.assert(objBankTransactions.TotalTax == null);
		System.assert(objBankTransactions.Total == null);
		System.assert(objBankTransactions.UpdatedDateUTC == null);
		System.assert(objBankTransactions.CurrencyCode == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.Phones objPhones = new XeroCreateBankTransactionRes.Phones(System.JSON.createParser(json));
		System.assert(objPhones != null);
		System.assert(objPhones.PhoneType == null);
		System.assert(objPhones.PhoneNumber == null);
		System.assert(objPhones.PhoneAreaCode == null);
		System.assert(objPhones.PhoneCountryCode == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes objXeroCreateBankTransactionRes = new XeroCreateBankTransactionRes(System.JSON.createParser(json));
		System.assert(objXeroCreateBankTransactionRes != null);
		System.assert(objXeroCreateBankTransactionRes.Id == null);
		System.assert(objXeroCreateBankTransactionRes.Status == null);
		System.assert(objXeroCreateBankTransactionRes.ProviderName == null);
		System.assert(objXeroCreateBankTransactionRes.DateTimeUTC == null);
		System.assert(objXeroCreateBankTransactionRes.BankTransactions == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.BankAccount objBankAccount = new XeroCreateBankTransactionRes.BankAccount(System.JSON.createParser(json));
		System.assert(objBankAccount != null);
		System.assert(objBankAccount.AccountID == null);
		System.assert(objBankAccount.Code == null);
		System.assert(objBankAccount.Name == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		XeroCreateBankTransactionRes.Contact objContact = new XeroCreateBankTransactionRes.Contact(System.JSON.createParser(json));
		System.assert(objContact != null);
		System.assert(objContact.ContactID == null);
		System.assert(objContact.ContactNumber == null);
		System.assert(objContact.ContactStatus == null);
		System.assert(objContact.Name == null);
		System.assert(objContact.EmailAddress == null);
		System.assert(objContact.BankAccountDetails == null);
		System.assert(objContact.Addresses == null);
		System.assert(objContact.Phones == null);
		System.assert(objContact.UpdatedDateUTC == null);
		System.assert(objContact.ContactGroups == null);
		System.assert(objContact.ContactPersons == null);
		System.assert(objContact.HasValidationErrors == null);
	}
}